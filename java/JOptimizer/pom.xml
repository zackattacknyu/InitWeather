<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<!--
/*
 * Copyright 2011-2014 JOptimizer
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
 -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.joptimizer</groupId>
  <artifactId>joptimizer</artifactId>
  <version>3.4.0</version>
  <packaging>jar</packaging>
  <name>JOptimizer</name>
  <description>JOptimizer is a java library for solving general convex optimization problems, like for example LP, QP, QCQP, SOCP, SDP, GP and many more.
  </description>
  <url>${project.site.url}</url>
  <developers>
    <developer>
      <id>a.t.</id>
      <name>alberto trivellato</name>
      <email>alberto.trivellato@gmail.com</email>
      <organization>JOptimizer</organization>
      <organizationUrl>${project.site.url}</organizationUrl>
      <timezone>+1</timezone>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>cristiana moriconi</name>
      <email>cristiana.moriconi@gmail.com</email>
      <organization>JOptimizer</organization>
      <organizationUrl>${project.site.url}</organizationUrl>
      <timezone>+1</timezone>
      <roles>
        <role>supervisor</role>
      </roles>
    </contributor>
    <contributor>
      <name>emanuele squillantini</name>
      <email>esquillantini@hotmail.com</email>
      <organization>JOptimizer</organization>
      <organizationUrl>${project.site.url}</organizationUrl>
      <timezone>+1</timezone>
      <roles>
        <role>functional analyst</role>
      </roles>
    </contributor>
  </contributors>
  <organization>
    <name>JOptimizer</name>
    <url>${project.site.url}</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>manual</distribution>
    </license>
  </licenses>
  <scm>
		<connection>scm:svn:http://svn.code.sf.net/p/cvxopt/code/trunk</connection>
		<developerConnection>scm:svn:https://svn.code.sf.net/p/cvxopt/code/trunk</developerConnection>
		<url>http://svn.code.sf.net/p/cvxopt/code/trunk</url>
	</scm>
	<distributionManagement>
	  <snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
	    <id>ossrh</id>
	    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
	  </repository>
	</distributionManagement>
	<profiles>
		<!-- copied from http://central.sonatype.org/pages/apache-maven.html -->
		<profile>
		  <!-- use this profile to perform a deployment to the Central Repository
		  with the command line: mvn -Prelease clean deploy -->
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.3</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<!-- GPG signing required for publishing via sonatype OSS hosting -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${sourceplugin.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${javadocplugin.version}</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
  <build>
	  <!--
	  <filters>
			<filter>src/main/filters/filter.properties</filter>
		</filters>
		-->
		<resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/*.zip</exclude>
        </excludes>
      </testResource>
    </testResources>
<!-- 	<pluginManagement> -->
<!--       <plugins> -->
<!--         <plugin> -->
<!--           <groupId>org.apache.maven.plugins</groupId> -->
<!--           <artifactId>maven-site-plugin</artifactId> -->
<!--           <version>3.0</version> -->
<!--           <dependencies> -->
<!--             <dependency>add support for ssh/scp -->
<!--               <groupId>org.apache.maven.wagon</groupId> -->
<!--               <artifactId>wagon-ssh</artifactId> -->
<!--               <version>1.0</version> -->
<!--             </dependency> -->
<!--           </dependencies> -->
<!--         </plugin> -->
<!--       </plugins> -->
<!--     </pluginManagement> -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <source>${project.build.java.version}</source>
          <target>${project.build.java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <configuration>
					<argLine>-Xmx1512m</argLine>
				  <skip>true</skip>
        </configuration><executions>
          <execution>
            <id>unit testing</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
              <excludes>
                <!--exclude>**/*.java</exclude-->
                <exclude>**/*ComparisonTest.java</exclude>
                <exclude>**/*NetlibTest.java</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <archive>
            <manifest>
					    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
					    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
					  </manifest>
          </archive>
        </configuration>
      </plugin>
<!--       <plugin> -->
<!-- 				<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-gpg-plugin</artifactId> -->
<!-- 				<version>1.5</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<id>sign-artifacts</id> -->
<!-- 						<phase>verify</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>sign</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
<!--       <plugin> -->
<!--         <groupId>org.apache.maven.plugins</groupId> -->
<!--         <artifactId>maven-source-plugin</artifactId> -->
<!--         <version>${sourceplugin.version}</version> -->
<!--         <executions> -->
<!-- 					<execution> -->
<!-- 						<id>attach-sources-2</id> -->
<!-- 						<phase>deploy</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>jar-no-fork</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!--       </plugin> -->
<!--       <plugin> -->
<!--       	<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-javadoc-plugin</artifactId> -->
<!-- 				<version>${javadocplugin.version}</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<id>attach-javadocs</id> -->
<!-- 						<phase>deploy</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>jar</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <property name="compile_classpath" refid="maven.compile.classpath"/>
                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                <property name="test_classpath" refid="maven.test.classpath"/>
                <property name="plugin_classpath" refid="maven.plugin.classpath"/>
                <!--
                <echo message="compile classpath: ${compile_classpath}"/>
                <echo message="runtime classpath: ${runtime_classpath}"/>
                <echo message="test classpath:    ${test_classpath}"/>
                <echo message="plugin classpath:  ${plugin_classpath}"/>
                -->
                <echo message="JAVA_HOME:  ${env.JAVA_HOME}"/>
                <echo message="MATHJAX_HOME:  ${env.MATHJAX_HOME}"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
<!--       <plugin> -->
<!-- 				<explicitly define maven-deploy-plugin after other to force execution order> -->
<!-- 				<groupId>org.apache.maven.plugins</groupId> -->
<!-- 				<artifactId>maven-deploy-plugin</artifactId> -->
<!-- 				<version>${deployplugin.version}</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<id>deploy</id> -->
<!-- 						<phase>deploy</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>deploy</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>colt</groupId>
      <artifactId>colt</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
    	<groupId>com.seventytwomiles</groupId>
			<artifactId>architecture-rules</artifactId>
			<version>2.1.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-validator</groupId>
					<artifactId>commons-validator</artifactId>
				</exclusion>
				<exclusion>
					<groupId>springmodules</groupId>
  				<artifactId>springmodules-validation</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.14</version>
    </dependency>
    <dependency>
    	<groupId>net.sourceforge.csparsej</groupId>
  		<artifactId>csparsej</artifactId>
  		<version>1.1.1</version>
    </dependency>
    <dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
  		<artifactId>commons-math3</artifactId>
  		<version>3.3</version>
		</dependency>
		<dependency>
			<groupId>org.ostermiller</groupId>
			<artifactId>utils</artifactId>
			<version>1.07.00</version>
		</dependency>
  </dependencies>
  
  <repositories>
  	<repository>
		  <id>architecture-rules-repo</id>
		  <name>architecture-rules repository hosted by code.google.com</name>
		  <url>http://architecturerules.googlecode.com/svn/maven2/</url>
		  <releases>
		    <checksumPolicy>ignore</checksumPolicy>
		  </releases>
			<snapshots>
				<checksumPolicy>ignore</checksumPolicy>
			</snapshots>
		</repository>
		<repository>
			<id>maven2-repository.java.net</id>
			<name>Java.net Repository for Maven 2</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
	</repositories>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.java.version>1.5</project.build.java.version>
    <project.site.url>http://www.joptimizer.com</project.site.url>
    <sourceplugin.version>2.4</sourceplugin.version>
    <javadocplugin.version>2.10.1</javadocplugin.version>
    <deployplugin.version>2.7</deployplugin.version>
  </properties>
</project>
